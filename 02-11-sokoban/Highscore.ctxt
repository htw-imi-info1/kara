#BlueJ class context
comment0.target=Highscore
comment0.text=\n\ The\ class\ is\ used\ to\ manage\ (read\ and\ write)\ the\ highscore.\n\ \n\ Every\ Highscore\ contains\ three\ highscore\ entries\ for\ one\ specific\ level.\n\ \n\ @author\ Marco\ Jakob\ (majakob@gmx.ch)\n\ @version\ 1.3\ (2012-07-04)\n
comment1.params=levelNumber
comment1.target=Highscore(int)
comment1.text=\n\ Constructor.\n\ \n\ @param\ levelNumber\ the\ level\ number\ that\ this\ Highscore\ is\ for\n
comment10.params=
comment10.target=Highscore\ clone()
comment11.params=movesA\ movesB
comment11.target=boolean\ isBetterThan(int,\ int)
comment11.text=\n\ Returns\ true\ if\ movesA\ is\ better\ than\ movesB.\n
comment2.params=
comment2.target=int\ getLevelNumber()
comment2.text=\n\ Returns\ the\ level\ number\ of\ this\ Highscore.\n
comment3.params=moves
comment3.target=boolean\ isHighscoreTop3(int)
comment3.text=\n\ Returns\ if\ the\ number\ of\ moves\ would\ be\ in\ the\ top\ 3\ of\ the\ highscore\ list.\n
comment4.params=playerName\ moves
comment4.target=int\ addHighscoreEntry(java.lang.String,\ int)
comment4.text=\n\ Adds\ the\ specified\ entry\ into\ the\ highscore.\ Only\ the\ top\ 3\ entries\ are\n\ stored\ (i.e.\ the\ entries\ with\ the\ fewest\ moves).\ The\ new\ place\ in\ the\ highscore\n\ is\ returned\ (1,\ 2\ or\ 3).\ If\ the\ highscore\ is\ not\ in\ the\ top\ 3\ it\ is\ ignored\ \n\ and\ -1\ is\ returned.\ \n\ <p>\n\ Note\:\ Every\ player\ can\ only\ be\ on\ one\ place\ in\ the\ highscore.\ If\ the\ same\ user\n\ is\ added\ with\ less\ moves,\ his\ place\ might\ be\ updated.\ \n\ \n\ @param\ playerName\ the\ name\ of\ the\ player\n\ @param\ moves\ the\ number\ of\ moves\n\ @return\ 1,\ 2\ or\ 3\ for\ the\ new\ place\ of\ the\ entry\ in\ the\ highscore\ list.\ If\ the\n\ \ \ \ \ \ highscore\ is\ not\ in\ the\ first\ three\ -1\ is\ returned.\n
comment5.params=entry
comment5.target=int\ addHighscoreEntry(Highscore.Entry)
comment5.text=\n\ Adds\ the\ specified\ entry\ into\ the\ highscore.\ Only\ the\ top\ 3\ entries\ are\n\ stored\ (i.e.\ the\ entries\ with\ the\ fewest\ moves).\ The\ new\ place\ in\ the\ highscore\n\ is\ returned\ (1,\ 2\ or\ 3).\ If\ the\ highscore\ is\ not\ in\ the\ top\ 3\ it\ is\ ignored\ \n\ and\ -1\ is\ returned.\ \n\ <p>\n\ Note\:\ Every\ player\ can\ only\ be\ on\ one\ place\ in\ the\ highscore.\ If\ the\ same\ user\n\ is\ added\ with\ less\ moves,\ his\ place\ might\ be\ updated.\ \n\ \n\ @param\ entry\ the\ entry.\n\ @return\ 1,\ 2\ or\ 3\ for\ the\ new\ place\ of\ the\ entry\ in\ the\ highscore\ list.\ If\ the\n\ \ \ \ \ \ highscore\ is\ not\ in\ the\ first\ three\ -1\ is\ returned.\n
comment6.params=
comment6.target=Highscore.Entry\ getFirstEntry()
comment6.text=\n\ Returns\ the\ first\ Entry\ in\ the\ highscore\ list\ or\ a\ DUMMY\ if\ there\ is\ no\ such\ entry.\n\ The\ entry\ is\ a\ clone\ to\ prevent\ change\ to\ this\ highscore.\n
comment7.params=
comment7.target=Highscore.Entry\ getSecondEntry()
comment7.text=\n\ Returns\ the\ second\ Entry\ in\ the\ highscore\ list\ or\ a\ DUMMY\ if\ there\ is\ no\ such\ entry.\n
comment8.params=
comment8.target=Highscore.Entry\ getThirdEntry()
comment8.text=\n\ Returns\ the\ third\ Entry\ in\ the\ highscore\ list\ or\ a\ DUMMY\ if\ there\ is\ no\ such\ entry.\n\ The\ entry\ is\ a\ clone\ to\ prevent\ change\ to\ this\ highscore.\n
comment9.params=playerName
comment9.target=int\ getPlayerPlace(java.lang.String)
comment9.text=\n\ Returns\ the\ place\ of\ the\ player\ in\ the\ highscore\ or\ -1,\ if\ not\ in\ highscore.\n\ \n\ @return\ 1,\ 2\ or\ 3\ for\ the\ place\ of\ the\ player\ in\ the\ highscore\ list.\ If\ the\n\ \ \ \ \ \ player\ is\ not\ in\ the\ first\ three\ -1\ is\ returned.\n
numComments=12
